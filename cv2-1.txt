import cv2
import numpy as np

def process_frame(frame):
    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
    blurred = cv2.GaussianBlur(gray, (5, 5), 0)
    thresh = cv2.adaptiveThreshold(blurred, 255, cv2.ADAPTIVE_THRESH_GAUSSIAN_C, 
                                  cv2.THRESH_BINARY_INV, 11, 2)
    contours, _ = cv2.findContours(thresh, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)
    min_area = 500
    valid_contours = [cnt for cnt in contours if cv2.contourArea(cnt) > min_area]
    for cnt in valid_contours:
        cv2.drawContours(frame, [cnt], -1, (0, 255, 0), 2)
    count = len(valid_contours)
    cv2.putText(frame, f"Items: {count}", (10, 30), cv2.FONT_HERSHEY_SIMPLEX, 
                1, (0, 0, 255), 2)
    
    return frame, count

def main():
    cap = cv2.VideoCapture(0)
    
    if not cap.isOpened():
        print("Error: Could not open webcam")
        return
    
    try:
        while True:
            ret, frame = cap.read()
            if not ret:
                print("Error: Could not read frame")
                break
            
            processed_frame, item_count = process_frame(frame)
            
            cv2.imshow('Inventory Monitor', processed_frame)
            
            print(f"Detected items: {item_count}")
            
            if cv2.waitKey(1) & 0xFF == ord('q'):
                break
    
    finally:
       
        cap.release()
        cv2.destroyAllWindows()

if __name__ == "__main__":
    main()